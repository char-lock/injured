package io.github.charlock.injured;


import java.util.Collection;
import java.util.Map;
import java.util.HashMap;
import java.util.UUID;
import org.bukkit.entity.Player;
import org.bukkit.Bukkit;

public class InjuredPlayer {
    private final UUID uuid;
    private Map<InjuryEffectType, InjuryEffect> injuries = new HashMap<InjuryEffectType, InjuryEffect>();


    InjuredPlayer(Player player) {
        this.uuid = player.getUniqueId();
    }


    public Player getPlayer() {
        return Bukkit.getPlayer(this.uuid);
    }


    public Collection<InjuryEffect> getInjuries() {
        return injuries.values();
    }

    public void addInjury(InjuryEffect injury, boolean overwrite) {
        if (injuries.containsKey(injury.injuryType())) {
            if (overwrite) {
                injuries.replace(injury.injuryType(), injury);
            }
        } else {
            injuries.put(injury.injuryType(), injury);
        }
    }

    public void addInjury(InjuryEffect injury) {
        this.addInjury(injury, false);
    }

    public void removeInjury(InjuryEffect injury) {
        if (injuries.containsKey(injury.injuryType())) {
            injuries.remove(injury.injuryType());
        }
    }

    public void clearInjuries() {
        injuries.clear();
    }
}
